{"version":3,"sources":["./src/app/components/menu-bar/menu-bar.component.html","./src/app/components/menu-bar/menu-bar.component.ts","./src/app/components/message/message.component.html","./src/app/components/message/message.component.ts","./src/app/common/PMConstants.ts","./src/environments/environment.ts","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/PMApi/project.api.ts","./src/app/app.module.ts","./src/app/services/sessionManager.service.ts","./src/app/services/routeSecure.service.ts","./src/app/services/routing.service.ts","./src/app/services/message.service.ts","./src/app/app-routing.module.ts","./src/app/services/Api.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEQ,oEAAmE;;;;IAGnE,sEAAK;IACD,4EACkE;IAA9B,iTAAS,kBAAmB,IAAC;IADjE,4DACkE;IAClE,+EAAoE;IAIxE,4DAAM;;;IAJiB,0DAAmB;IAAnB,mFAAmB;;;IARlD,+EAA6C;IACzC,wIAEc;IACd,wIASc;IAClB,4DAAY;;;IAdiB,+EAAe;;ACWrC,MAAM,gBAAgB;IAK3B,YAAoB,MAAc,EACf,cAAqC,EACrC,cAA8B;QAF7B,WAAM,GAAN,MAAM,CAAQ;QACf,mBAAc,GAAd,cAAc,CAAuB;QACrC,mBAAc,GAAd,cAAc,CAAgB;QAC/C,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;QAEhD,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YAC/D,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;YAC9B,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,SAAS,CAAC,GAAG,EAAE;YACxD,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEO,cAAc;QACpB,IAAI,CAAC,KAAK,GAAG;YACX;gBACE,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;aAC/D;YACD;gBACE,KAAK,EAAE,cAAc;gBACrB,OAAO,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAE,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClG,OAAO,EAAE,IAAI,CAAC,iBAAiB,EAAE;aAClC;YACD;gBACE,KAAK,EAAE,OAAO;gBACd,OAAO,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAE,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC/F,OAAO,EAAE,IAAI,CAAC,iBAAiB,EAAE;aAClC;SACF,CAAC;QACF,IAAI,CAAC,SAAS,GAAG;YACf;gBACE,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,GAAG,EAAE;oBACZ,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;oBACnC,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC;gBAC3C,CAAC;aACF;YACD;gBACE,KAAK,EAAC,SAAS;gBACf,QAAQ,EAAE,IAAI;aACf;SACF,CAAC;IACJ,CAAC;IAEO,iBAAiB;QACvB,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;IAChD,CAAC;;gFA5DU,gBAAgB;gGAAhB,gBAAgB;QDX7B,wHAcY;;QAdA,+EAAe;;;;;;;;;;;;;;;;;;;;;;;;;IEA3B,yEAIoD;IAChD,0EAAkB;IACd,uDACJ;IAAA,4DAAO;IACP,4EAAoF;IAApC,+SAAgB;IAC5D,0EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAC3C,4DAAS;IACb,4DAAM;;;IATF,wNAE+C;IAE3C,0DACJ;IADI,0FACJ;;ACEG,MAAM,gBAAgB;IAK3B,YAA4B,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QACxD,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,EAAE;YACjF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,qBAAqB,EAAE,CAAC;YAC1D,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YACtD,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,IAAI,EAAE,CAAC;YACd,CAAC,EAAE,OAAO,CAAC,CAAC;QACd,CAAC,CAAC,CAAC;IACJ,CAAC;IAEK,QAAQ;IACf,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;IACzC,CAAC;IAEM,IAAI;QACT,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;IAC3B,CAAC;;gFA3BU,gBAAgB;gGAAhB,gBAAgB;QDT7B,4GAWM;;QAVD,qFAAsB;;;;;;;;;;;;;;AED3B;AAAA;AAAO,MAAM,WAAW;;AACpB,kBAAkB;AACJ,0CAA8B,GAAG,MAAM,CAAC;AACxC,sBAAU,GAAG,QAAQ,CAAC;AACtB,qBAAS,GAAG,OAAO,CAAC;AAElC,qBAAqB;AACP,mCAAuB,GAAG,SAAS,CAAC;AAElD,cAAc;AACA,oCAAwB,GAAG,QAAQ,CAAC;AACpC,oCAAwB,GAAG,QAAQ,CAAC;AAEpC,8CAAkC,GAAG,OAAO,CAAC;AAC7C,+CAAmC,GAAG,QAAQ,CAAC;AAC/C,4CAAgC,GAAG,KAAK,CAAC;AAEzC,4BAAgB,GAAG,MAAM,CAAC;AAC1B,6BAAiB,GAAG,OAAO,CAAC;AAC5B,4BAAgB,GAAG,MAAM,CAAC;AAE1B,iCAAqB,GAAG,SAAS,CAAC;AAClC,iCAAqB,GAAG,SAAS,CAAC;AAClC,gCAAoB,GAAG,QAAQ,CAAC;AAE9C,eAAe;AACD,+BAAmB,GAAG,SAAS,CAAC;AAChC,kCAAsB,GAAG,YAAY,CAAC;AACtC,gCAAoB,GAAG,OAAO,CAAC;;;;;;;;;;;;;AC5BjD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;ACR5D,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,yEAAuB;QACnB,yEAAwC;QACpC,yEAAmB;QACf,wEAAwB;QAAA,yEAAc;QAAA,4DAAK;QAC/C,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;;ACEC,MAAM,YAAY;IAEvB,YAAoB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;QAD/C,UAAK,GAAG,UAAU,CAAC;QAEb,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC/B,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;;wEALU,YAAY;4FAAZ,YAAY;QCRzB,0EAA6B;QAC7B,yEAA2B;QAC3B,2EAA+B;;;;;;;;;;;;;;;;;;;;ACWxB,MAAM,iBAAiB;IAK1B,YAAoB,GAAQ;QAAR,QAAG,GAAH,GAAG,CAAK;QAJX,YAAO,GAAG,WAAW,CAAC;QACtB,YAAO,GAAG,SAAS,CAAC;QACpB,gBAAW,GAAG,cAAc,CAAC;QAC7B,WAAM,GAAG,SAAS,CAAC;IAGpC,CAAC;IAEM,qBAAqB,CAAC,SAAiB;QAC1C,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;IACtG,CAAC;IAEM,kBAAkB,CAAC,SAAiB,EAAE,KAAkC;QAC3E,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACpF,CAAC;IAEM,iBAAiB,CAAC,SAAiB;QACtC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5E,CAAC;IAEM,oBAAoB,CAAC,SAAiB,EAAE,QAAgB,EAAE,KAA4B;QACzF,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IAC9H,CAAC;IAEM,eAAe,CAAC,SAAiB,EAAE,WAAmB,EAAE,KAA4B;QACvF,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,gBAAgB,GAAG,WAAW,EAAE,KAAK,CAAC,CAAC;IAChG,CAAC;IAEM,eAAe,CAAC,SAAiB,EAAE,WAAmB;QACzD,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,gBAAgB,GAAG,WAAW,CAAC,CAAC;IAC5F,CAAC;IAEM,YAAY,CAAC,SAAiB,EAAE,QAAgB;QACnD,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,WAAW,GAAG,QAAQ,CAAC,CAAC;IACpF,CAAC;IAEM,WAAW,CAAC,SAAiB,EAAE,QAAgB,EAAE,KAA2B;QAC/E,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,WAAW,GAAG,QAAQ,GAAG,QAAQ,EAAE,KAAK,CAAC,CAAC;IACnG,CAAC;IAEM,eAAe,CAAC,SAAiB,EAAE,QAAgB;QACtD,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,WAAW,GAAG,QAAQ,GAAG,YAAY,EAAE,IAAI,CAAC,CAAC;IACtG,CAAC;IAEM,gBAAgB,CAAC,SAAiB,EAAE,WAAmB;QAC1D,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,gBAAgB,GAAG,WAAW,GAAG,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC1G,CAAC;IAEM,eAAe,CAAC,SAAiB,EAAE,WAAmB;QACzD,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,gBAAgB,GAAG,WAAW,GAAG,OAAO,EAAE,IAAI,CAAC,CAAC;IACzG,CAAC;IAEM,UAAU,CAAC,SAAiB,EAAE,KAA0B;QAC3D,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC3E,CAAC;IAEM,eAAe,CAAC,SAAiB;QACpC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,QAAQ,CAAC,CAAC;IACnE,CAAC;IAEM,WAAW,CAAC,SAAiB,EAAE,QAAiB;QACnD,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE;YAC3B,aAAa,IAAI,GAAG,EAAE,EAAE,CAAC;YACzB,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,GAAC,CAAC,EAAE;gBAC3B,aAAa,IAAI,GAAG,CAAC;aACxB;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,SAAS,GAAG,aAAa,CAAC,CAAC;IACvF,CAAC;IAEM,UAAU,CAAC,SAAkB,EAAE,MAAc,EAAE,KAA0B;QAC5E,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,SAAS,GAAG,MAAM,EAAE,KAAK,CAAC,CAAC;IACpF,CAAC;IAEM,aAAa,CAAC,SAAiB,EAAE,MAAc,EAAE,MAAc;QAClE,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,SAAS,GAAG,MAAM,GAAG,YAAY,EAAE,MAAM,CAAC,CAAC;IACpG,CAAC;IAEM,gCAAgC,CAAC,SAAiB,EAAE,WAAmB;QAC1E,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,wBAAwB,GAAG,WAAW,EAAE,IAAI,CAAC,CAAC;IACxG,CAAC;IAEM,qBAAqB,CAAC,SAAiB,EAAE,WAAmB,EAAE,QAAgB;QACjF,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,WAAW,GAAG,QAAQ,GAAG,gBAAgB,GAAG,WAAW,EAAE,IAAI,CAAC,CAAC;IACzH,CAAC;;kFAvFQ,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB;;;;;;;;;;;;;ACZ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACgC;AACL;AACrC;AACuB;AACQ;AACA;AACW;AACL;AACL;AACP;AACN;AACT;AAC6B;AAChB;AACjB;AACO;;;AAGlD,MAAM,QAAQ,GAAG,CAAC,iDAAG;IACH,wEAAc;IACd,gFAAkB;IAClB,uFAAqB;IACrB,qEAAiB;IACjB,yEAAc;CACf,CAAC;AA4BX,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,2DAAY;8FADb,CAAC,GAAG,QAAQ,CAAC,YAhBf;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,qEAAgB;YAChB,8DAAa;YACb,yDAAY;YACZ,kEAAe;YACf,oEAAe,CAAC,OAAO,CAAC;gBAChB,MAAM,EAAE;oBACJ,OAAO,EAAE,oEAAe;oBACxB,UAAU,EAAE,iBAAiB;oBAC7B,IAAI,EAAE,CAAC,+DAAU,CAAC;iBACrB;aACJ,CAAC;SACP;oIAIU,SAAS,mBAxBlB,2DAAY;QACZ,sFAAgB;QAChB,2FAAiB;QACjB,yFAAgB,aAGhB,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,qEAAgB;QAChB,8DAAa;QACb,yDAAY;QACZ,kEAAe;AAcZ,SAAS,iBAAiB,CAAC,IAAgB;IAC9C,OAAO,IAAI,+EAAmB,CAAC,IAAI,CAAC,CAAC;AACzC,CAAC;;;;;;;;;;;;;AC5DD;AAAA;AAAA;AAAA;AAAA;AAA+B;AACqB;;AAG7C,MAAM,qBAAqB;IAK9B;QACI,IAAI,CAAC,iBAAiB,GAAG,IAAI,4CAAO,EAAW,CAAC;QAChD,IAAI,CAAC,sBAAsB,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;IACxB,CAAC;IAEM,SAAS,CAAC,EAAU;QACvB,YAAY,CAAC,OAAO,CAAC,+DAAW,CAAC,mBAAmB,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAC/D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAEM,SAAS;QACZ,MAAM,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,+DAAW,CAAC,mBAAmB,CAAC,CAAC;QACjE,OAAO,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IAEM,YAAY,CAAC,EAAU;QAC1B,YAAY,CAAC,OAAO,CAAC,+DAAW,CAAC,sBAAsB,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAClE,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC;IACvC,CAAC;IAEM,YAAY;QACf,MAAM,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,+DAAW,CAAC,sBAAsB,CAAC,CAAC;QACpE,OAAO,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IAEM,YAAY;QACf,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,YAAY,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;0FAlCQ,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB;;;;;;;;;;;;;ACFlC;AAAA;AAAA;AAAA;AAAA;AAAoD;;;AAI7C,MAAM,kBAAkB;IAC3B,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAClD,CAAC;IACD,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACjE,IAAI,YAAY,CAAC,OAAO,CAAC,+DAAW,CAAC,oBAAoB,CAAC,IAAI,IAAI,EAAE;YAChE,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC;SAC5C;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;;oFATQ,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB;;;;;;;;;;;;;ACL/B;AAAA;AAAA;AAAA;AAAA;AAAoD;;;AAG7C,MAAM,cAAc;IACvB,YAA6B,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAE3C,CAAC;IAEM,oBAAoB,CAAC,SAAiB;QACzC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,GAAG,SAAS,CAAC,CAAC;IAC/D,CAAC;IAEM,kBAAkB;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,+DAAW,CAAC,8BAA8B,EAAE,+DAAW,CAAC,SAAS,CAAC,CAAC,CAAC;IACpG,CAAC;IAEM,oBAAoB;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,+DAAW,CAAC,uBAAuB,CAAC,CAAC,CAAC;IACtE,CAAC;IAEM,iBAAiB,CAAC,SAAiB;QACtC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,GAAG,SAAS,CAAC,CAAC;IAC5D,CAAC;IAEM,mBAAmB;QACtB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IAC9C,CAAC;;4EAvBQ,cAAc;iGAAd,cAAc,WAAd,cAAc;;;;;;;;;;;;;ACJ3B;AAAA;AAAA;AAAA;AAA+B;;AAGxB,MAAM,cAAc;IAIvB;QACI,IAAI,CAAC,cAAc,GAAG,IAAI,4CAAO,EAAU,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;IAC1B,CAAC;IAEM,kBAAkB,CAAC,OAAe;QACrC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAEM,gBAAgB,CAAC,OAAe;QACnC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAEM,kBAAkB,CAAC,OAAe;QACrC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAEO,WAAW,CAAC,OAAe;QAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAEM,qBAAqB;QACxB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;;4EA9BQ,cAAc;iGAAd,cAAc,WAAd,cAAc;;;;;;;;;;;;;ACH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACJ;AAC4B;;;AAG/E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,YAAY,EAAE,GAAG,EAAE,CAAC,mXAA8D,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,0BAA0B,CAAC;KAC3H;IACD;QACE,IAAI,EAAE,+DAAW,CAAC,8BAA8B;QAChD,YAAY,EAAE,GAAG,EAAE,CAAC,mXAA8D,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,0BAA0B,CAAC;KAC3H;IACD;QACE,IAAI,EAAE,+DAAW,CAAC,uBAAuB;QACzC,YAAY,EAAE,GAAG,EAAE,CAAC,+RAAkC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC;KAClF;IACD;QACE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,2FAAiB;KAC/C;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,WAAW;KACxB;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;AC9BxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkF;AAEnB;AACpB;AACS;;;;AAI7C,MAAM,GAAG;IAMZ,YAAoB,UAAsB,EAAU,cAA8B;QAA9D,eAAU,GAAV,UAAU,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAmD1E,MAAC,GAAG,CAAC,KAAwB,EAAqB,EAAE;YACxD,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE;gBACvC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aAC7D;iBAAM,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC7B,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,wDAAwD,CAAC,CAAC;aAClG;iBAAM;gBACH,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aAC7D;YAED,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;QA5DG,IAAI,CAAC,OAAO,GAAG,8BAA8B,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG;YACf,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,cAAc,EAAE,kBAAkB;gBAClC,iBAAiB,EAAE,IAAI;gBACvB,eAAe,EAAE,EAAE;aACtB,CAAC;SACL,CAAC;QACF,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,+DAAW,CAAC,oBAAoB,CAAC,CAAC;QACnE,IAAI,KAAK,KAAK,IAAI,EAAE;YAChB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SAC9B;IACL,CAAC;IAEM,kBAAkB,CAAC,GAAW,EAAE,IAAS;QAC5C,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,IAAI,CAAC;aACxC,IAAI,CACD,iEAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CACrB,CAAC;IAClB,CAAC;IAEM,IAAI,CAAC,GAAW,EAAE,IAAS;QAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC;aAC1D,IAAI,CACD,iEAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CACrB,CAAC;IAClB,CAAC;IAGM,GAAG,CAAC,GAAW,EAAE,IAAS;QAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CACvE,iEAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CACrB,CAAC;IACN,CAAC;IAEM,GAAG,CAAC,GAAW;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CACjE,iEAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CACrB,CAAC;IACN,CAAC;IACM,MAAM,CAAC,GAAW;QACrB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CACpE,iEAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CACrB,CAAC;IACN,CAAC;IAEM,cAAc,CAAC,KAAa;;QAC/B,IAAI,CAAC,WAAW,CAAC,OAAO,SAAG,IAAI,CAAC,WAAW,CAAC,OAAO,0CAAE,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,KAAK,CAAC,CAAC;IACjG,CAAC;;sDAvDQ,GAAG;sFAAH,GAAG,WAAH,GAAG;;;;;;;;;;;;;;;;;;;ACR+B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["<p-menubar *ngIf=\"isVisible\" [model]=\"items\">\n    <ng-template pTemplate=\"start\">\n        <img src=\"assets/images/project.png\" width=\"40\" height=\"40\" alt=\"\">\n    </ng-template>\n    <ng-template pTemplate=\"end\">\n        <div>\n            <img src=\"assets/images/compte.png\" width=\"30\" height=\"30\" alt=\"\"\n                #btn type=\"button\" label=\"Show\" (click)=\"menu.toggle($event)\">\n            <p-slideMenu #menu [model]=\"userItems\" [popup]=\"true\"></p-slideMenu>\n            <!--\n            <img src=\"assets/images/france.png\" width=\"30\" height=\"30\" alt=\"\">\n            -->\n        </div>\n    </ng-template>\n</p-menubar>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MenuItem } from 'primeng/api';\nimport { RoutingService } from 'src/app/services/routing.service';\nimport { sessionManagerService } from 'src/app/services/sessionManager.service';\n\n@Component({\n  selector: 'app-menu-bar',\n  templateUrl: './menu-bar.component.html',\n  styleUrls: ['./menu-bar.component.css']\n})\nexport class MenuBarComponent implements OnInit {\n  public items: MenuItem[];\n  public userItems: MenuItem[];\n  public isVisible: boolean;\n\n  constructor(private router: Router,\n             private sessionService: sessionManagerService,\n             private routingService: RoutingService) { \n    this.items = [];\n    this.userItems = [];\n    this.isVisible = sessionService.getUserId() > 0;\n\n    this.sessionService.userLoggedEmitter.subscribe((isUserLogged) => {\n      this.isVisible = isUserLogged;\n      this.initializeMenu();\n    });\n\n    this.sessionService.projectSelectedSubject.subscribe(() => {\n      this.initializeMenu();\n    });\n  }\n\n  ngOnInit(): void {\n    this.initializeMenu();\n  }\n\n  private initializeMenu(): void {\n    this.items = [\n      {\n        label: 'Project',\n        command: () => { this.routingService.gotoProjectComponent(); },\n      },\n      {\n        label: 'User Stories',\n        command: () => { this.routingService.gotoBacklogComponent( +this.sessionService.getProjectId()); },\n        visible: this.isProjectSelected()\n      },\n      {\n        label: 'Tasks',\n        command: () => { this.routingService.gotoTaskComponent( +this.sessionService.getProjectId()); },\n        visible: this.isProjectSelected()\n      },\n    ];\n    this.userItems = [\n      {\n        label: 'Quitter',\n        command: () => { \n          this.sessionService.closeSession();\n          this.routingService.gotoLoginComponent();\n        }\n      },\n      {\n        label:'Profile',\n        disabled: true,\n      }\n    ];\n  }\n\n  private isProjectSelected(): boolean {\n    return this.sessionService.getProjectId() > 0;\n  }\n}\n","<div class=\"alert d-flex justify-content-between\" \n    *ngIf=\"message !=  null\"\n    [ngClass]=\"{'alert-success': messageType === 0,\n                'alert-warning': messageType === 1,\n                'alert-danger': messageType === 2}\">\n    <span class=\"p-2\">\n        {{ message }}\n    </span>\n    <button type=\"button\" class=\"close p-2 ml-auto\" (click)=\"hide()\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MessageService } from 'src/app/services/message.service';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\nexport class MessageComponent implements OnInit, OnDestroy {\n  public message: string | undefined;\n  public messageType: number;\n  private messageSubscription: Subscription;\n\n  constructor(public readonly messageService: MessageService) {\n    this.message = undefined;\n    this.messageType = 0;\n    this.messageSubscription = this.messageService.messageSubject.subscribe((message => {\n      this.message = message;\n      this.messageType = messageService.getCurrentMessageType();\n      const timeout = this.messageType === 0 ? 5000 : 10000;\n      setTimeout(() => {\n        this.hide();\n      }, timeout);\n    }))\n   }\n\n  public ngOnInit(): void {\n  }\n\n  public ngOnDestroy(): void {\n    this.messageSubscription.unsubscribe();\n  }\n\n  public hide(): void {\n    this.message = undefined;\n  }\n\n}\n","export class PMConstants {\n    // Auth module URI\n    public static AUTHENTICATION_MODULE_BASE_URI = 'auth';\n    public static SIGNUP_URI = 'signup';\n    public static LOGIN_URI = 'login';\n\n    // Project module URI\n    public static PROJECT_MODULE_BASE_URI = 'project';\n\n    //ENUMERATIONS\n    public static USER_STORY_STATUS_CLOSED = 'CLOSED';\n    public static USER_STORY_STATUS_OPENED = 'OPENED';\n\n    public static USER_STORY_STATUS_IMPORTANCE_HIGHT = 'HIGHT';\n    public static USER_STORY_STATUS_IMPORTANCE_NORMAL = 'NORMAL';\n    public static USER_STORY_STATUS_IMPORTANCE_LOW = 'LOW';\n\n    public static TASK_STATUS_TODO = 'TODO';\n    public static TASK_STATUS_DOING = 'DOING';\n    public static TASK_STATUS_DONE = 'DONE';\n\n    public static SPRINT_STATUS_CREATED = 'CREATED';\n    public static SPRINT_STATUS_STARTED = 'STARTED';\n    public static SPRINT_STATUS_CLOSED = 'CLOSED';\n\n    // session keys\n    public static SESSION_USER_ID_KEY = \"USER_ID\";\n    public static SESSION_PROJECT_ID_KEY = \"PROJECT_ID\";\n    public static SESSION_TOKEN_ID_KEY = \"TOKEN\";\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-4\">\n            <h1 class=\"text-center\">Page Not Found</h1>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n  constructor(private translate: TranslateService) {\n        translate.setDefaultLang('fr');\n        translate.use('en');\n  }\n}\n","<app-menu-bar></app-menu-bar>\n<app-message></app-message>\n<router-outlet></router-outlet>","import { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { ApiConstant } from \"../common/ApiConstant\";\nimport { AddSprintToProjectOutputDTO } from \"../dto/addSprintToProjectOutputDTO\";\nimport { AddUserStoryOutputDTO } from \"../dto/addUserStoryOutputDTO\";\nimport { CreateTaskOutputDTO } from \"../dto/createTask.output.dto\";\nimport { GetSprintsInputDTO } from \"../dto/getSprint.input.dto\";\nimport { GetUsersByCriteriaInputDTO } from \"../dto/getUsersByCriteriaInputDTO\";\nimport { GetUserStoriesInputDTO } from \"../dto/getUserStoriesInputDTO\";\nimport { StartSprintOutputDTO } from \"../dto/startSprintOutputDTO\";\nimport { API } from \"../services/Api\";\n\n@Injectable()\nexport class ProjectApiService {\n    private readonly baseURI = '/projects';\n    private readonly backlog = 'backlog';\n    private readonly userStories = 'user-stories'; \n    private readonly sprint = 'sprints';\n    constructor(private api: API) {\n        \n    }\n\n    public getBacklogUserStories(projectId: number): Observable<GetUserStoriesInputDTO[]> {\n        return this.api.get(this.baseURI + '/' + projectId + '/' + this.backlog + '/' + this.userStories);\n    }\n\n    public addSprintToProject(projectId: number, input: AddSprintToProjectOutputDTO): Observable<void> {\n        return this.api.post(this.baseURI + '/' + projectId + '/' + this.sprint, input);\n    }\n\n    public getProjectSprints(projectId: number): Observable<GetSprintsInputDTO[]> {\n        return this.api.get(this.baseURI + '/' + projectId + '/' + this.sprint);\n    }\n\n    public addUserStoryToSprint(projectId: number, sprintId: number, input: AddUserStoryOutputDTO): Observable<void> {\n        return this.api.post(this.baseURI + '/' + projectId + '/' + this.sprint + '/' + sprintId + '/' + this.userStories, input);\n    }\n\n    public updateUserStory(projectId: number, userStoryId: number, input: AddUserStoryOutputDTO): Observable<void> {\n        return this.api.put(this.baseURI + '/' + projectId + '/user-stories/' + userStoryId, input);\n    }\n\n    public deleteUserStory(projectId: number, userStoryId: number): Observable<void> {\n        return this.api.delete(this.baseURI + '/' + projectId + '/user-stories/' + userStoryId);\n    }\n\n    public deleteSprint(projectId: number, sprintId: number): Observable<void> {\n        return this.api.delete(this.baseURI + '/' + projectId + '/sprints/' + sprintId);\n    }\n\n    public startSprint(projectId: number, sprintId: number, input: StartSprintOutputDTO): Observable<void> {\n        return this.api.put(this.baseURI + '/' + projectId + '/sprints/' + sprintId + '/start', input);\n    }\n\n    public terminateSprint(projectId: number, sprintId: number): Observable<void> {\n        return this.api.put(this.baseURI + '/' + projectId + '/sprints/' + sprintId + '/terminate', null);\n    }\n\n    public closeUserStories(projectId: number, userStoryId: number): Observable<void> {\n        return this.api.put(this.baseURI + '/' + projectId + '/user-stories/' + userStoryId + '/close', null);\n    }\n\n    public openUserStories(projectId: number, userStoryId: number): Observable<void> {\n        return this.api.put(this.baseURI + '/' + projectId + '/user-stories/' + userStoryId + '/open', null);\n    }\n\n    public createTask(projectId: number, input: CreateTaskOutputDTO): Observable<void> {\n        return this.api.post(this.baseURI + '/' + projectId + '/tasks', input);\n    }\n\n    public getProjectUsers(projectId: number): Observable<GetUsersByCriteriaInputDTO[]> {\n        return this.api.get(this.baseURI + '/' + projectId + '/users');\n    }\n\n    public deleteTasks(projectId: number, tasksIDs:number[]): Observable<void> {\n        let taskIDsString = \"\";\n        tasksIDs.forEach((id, index) => {\n            taskIDsString += `${id}`;\n            if (index < tasksIDs.length-1) {\n                taskIDsString += \",\";\n            }\n        });\n\n        return this.api.delete(this.baseURI + '/' + projectId + '/tasks/' + taskIDsString);\n    }\n\n    public updateTask(projectId:  number, taskId: number, input: CreateTaskOutputDTO): Observable<void> {\n        return this.api.put(this.baseURI + '/' + projectId + '/tasks/' + taskId, input);\n    }\n\n    public setTaskStatus(projectId: number, taskId: number, status: string): Observable<void> {\n        return this.api.put(this.baseURI + '/' + projectId + '/tasks/' + taskId + '/setStatus', status);\n    }\n\n    public moveUserStoryFromSprintToBacklog(projectId: number, userStoryid: number): Observable<void> {\n        return this.api.post(this.baseURI + '/' + projectId + '/backlog/user-stories/' + userStoryid, null);\n    }\n\n    public moveUserStoryToSprint(projectId: number, userStoryid: number, sprintId: number): Observable<void> {\n        return this.api.post(this.baseURI + '/' + projectId + '/sprints/' + sprintId + '/user-stories/' + userStoryid, null);\n    }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MessageComponent } from './components/message/message.component';\nimport { API } from './services/Api';\nimport { MessageService } from './services/message.service';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { RouteSecureService } from './services/routeSecure.service';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { sessionManagerService } from './services/sessionManager.service';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader'\nimport { ProjectApiService } from './PMApi/project.api';\nimport { MenubarModule } from 'primeng/menubar'\nimport { MenuBarComponent } from './components/menu-bar/menu-bar.component';\nimport { RoutingService } from './services/routing.service';\nimport { SharedModule } from 'primeng/api';\nimport {SlideMenuModule} from 'primeng/slidemenu';\n\n\nconst SERVICES = [API, \n                  MessageService,\n                  RouteSecureService,\n                  sessionManagerService,\n                  ProjectApiService,\n                  RoutingService\n                ];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MessageComponent,\n    NotFoundComponent,\n    MenuBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MenubarModule,\n    SharedModule,\n    SlideMenuModule,\n    TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            }\n        })\n  ],\n  providers: [...SERVICES],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nexport function HttpLoaderFactory(http: HttpClient): TranslateHttpLoader {\n    return new TranslateHttpLoader(http);\n}","import { Injectable } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport { PMConstants } from \"../common/PMConstants\";\n\n@Injectable()\nexport class sessionManagerService {\n    public userLoggedEmitter: Subject<boolean>;\n    public projectSelectedSubject: Subject<void>;\n    private readonly invalidId: number;\n\n    constructor() {\n        this.userLoggedEmitter = new Subject<boolean>();\n        this.projectSelectedSubject = new Subject<void>();\n        this.invalidId = -1;\n    }\n\n    public setUserid(id: number): void {\n        localStorage.setItem(PMConstants.SESSION_USER_ID_KEY, `${id}`);\n        this.userLoggedEmitter.next(true);\n    }\n\n    public getUserId(): number {\n        const id = localStorage.getItem(PMConstants.SESSION_USER_ID_KEY);\n        return id != null ? +id : -1;\n    }\n\n    public setProjectId(id: number): void {\n        localStorage.setItem(PMConstants.SESSION_PROJECT_ID_KEY, `${id}`);\n        this.projectSelectedSubject.next();\n    }\n\n    public getProjectId(): number {\n        const id = localStorage.getItem(PMConstants.SESSION_PROJECT_ID_KEY);\n        return id != null ? +id : -1;\n    }\n\n    public closeSession(): void {\n        this.userLoggedEmitter.next(false);\n        localStorage.clear();\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { PMConstants } from \"../common/PMConstants\";\nimport { RoutingService } from \"./routing.service\";\n\n@Injectable()\nexport class RouteSecureService implements CanActivate {\n    constructor(private routingService: RoutingService) {\n    }\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n        if (localStorage.getItem(PMConstants.SESSION_TOKEN_ID_KEY) == null) {\n            this.routingService.gotoLoginComponent();\n        }\n\n        return true;\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { PMConstants } from \"../common/PMConstants\";\n\n@Injectable()\nexport class RoutingService {\n    constructor(private readonly router: Router) {\n\n    }\n\n    public gotoBacklogComponent(projectId: number): void {\n        this.router.navigateByUrl('/project/backlog/' + projectId);\n    }\n\n    public gotoLoginComponent(): void {\n        this.router.navigate(['/' + PMConstants.AUTHENTICATION_MODULE_BASE_URI, PMConstants.LOGIN_URI]);\n    }\n\n    public gotoProjectComponent(): void {\n        this.router.navigate([\"/\" + PMConstants.PROJECT_MODULE_BASE_URI]);\n    }\n\n    public gotoTaskComponent(projectId: number): void {\n        this.router.navigateByUrl('/project/task/' + projectId);\n    }\n\n    public gotoSignupComponent(): void {\n        this.router.navigateByUrl('/auth/signup');\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\n\n@Injectable()\nexport class MessageService {\n    public messageSubject: Subject<string>;\n    private messageType: number;\n\n    constructor() {\n        this.messageSubject = new Subject<string>();\n        this.messageType = -1;\n    }\n    \n    public showWarningMessage(message: string) {\n        this.messageType = 1;\n        this.showMessage(message);\n    }\n\n    public showErrorMessage(message: string) {\n        this.messageType = 2;\n        this.showMessage(message);\n    }\n\n    public showSuccessMessage(message: string) {\n        this.messageType = 0;\n        this.showMessage(message);\n    }\n\n    private showMessage(message: string): void {\n        this.messageSubject.next(message);\n    }\n\n    public getCurrentMessageType(): number {\n        return this.messageType;\n    }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PMConstants } from './common/PMConstants';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\n\n\nconst routes: Routes = [\n  { \n    path: '',\n    loadChildren: () => import('./authentication-module/authentication-module.module').then(m => m.AuthenticationModuleModule)\n  },\n  {\n    path: PMConstants.AUTHENTICATION_MODULE_BASE_URI,\n    loadChildren: () => import('./authentication-module/authentication-module.module').then(m => m.AuthenticationModuleModule)\n  },\n  {\n    path: PMConstants.PROJECT_MODULE_BASE_URI,\n    loadChildren: () => import('./project/project.module').then(m => m.ProjectModule)\n  },\n  {\n    path: 'notFound', component: NotFoundComponent\n  },\n  {\n    path: '**',\n    redirectTo: '/notFound'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, ObservableInput, throwError } from \"rxjs\";\nimport { catchError } from 'rxjs/operators'\nimport { PMConstants } from \"../common/PMConstants\";\nimport { MessageService } from \"./message.service\";\n\n@Injectable()\nexport class API {\n    private baseURI: string;\n    private httpOptions: {\n        headers?: HttpHeaders;\n    };\n\n    constructor(private httpClient: HttpClient, private messageService: MessageService) {\n        this.baseURI = \"http://localhost:9090/pm-api\";\n        this.httpOptions = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Accept-Language': 'fr', // TODO allow user to set language\n                'Authorization': ''\n            })\n        };\n        let token = localStorage.getItem(PMConstants.SESSION_TOKEN_ID_KEY);\n        if (token !== null) {\n            this.setHttpOptions(token);\n        }\n    }\n\n    public postWithoutHeaders(uri: string, body: any): Observable<any> {\n        return this.httpClient.post(this.baseURI + uri, body)\n                    .pipe(\n                        catchError(this.f)\n                    );\n    }\n\n    public post(uri: string, body: any): Observable<any> {\n        return this.httpClient.post(this.baseURI + uri, body, this.httpOptions)\n                    .pipe(\n                        catchError(this.f)\n                    );\n    }\n\n\n    public put(uri: string, body: any): Observable<any> {\n        return this.httpClient.put(this.baseURI + uri, body, this.httpOptions).pipe(\n            catchError(this.f)\n        );\n    }\n\n    public get(uri: string): Observable<any> {\n        return this.httpClient.get(this.baseURI + uri, this.httpOptions).pipe(\n            catchError(this.f)\n        );\n    }\n    public delete(uri: string): Observable<any> {\n        return this.httpClient.delete(this.baseURI + uri, this.httpOptions).pipe(\n            catchError(this.f)\n        );\n    }\n\n    public setHttpOptions(token: string) {\n        this.httpOptions.headers = this.httpOptions.headers?.set(\"Authorization\", \"Bearer \" + token);\n    }\n\n    private f = (error: HttpErrorResponse): Observable<never> => {\n        if (error.status === 401 && !!error.error) {\n            this.messageService.showErrorMessage(error.error.message);\n        } else if (error.status === 500) {\n            this.messageService.showErrorMessage(\"Internal server error, please contact an administrator\");\n        } else {\n            this.messageService.showErrorMessage(error.error.message);\n        }\n\n        return throwError(error);\n    }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}